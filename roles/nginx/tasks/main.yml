---
# tasks file for nginx
- name: get default ip
  ansible.builtin.debug:
    var: ansible_default_ipv4.address

- name: Installing NGINX Dependencies
  become: yes
  ansible.builtin.apt:
    name: ['libssl-dev', 
            'zlib1g-dev', 
            'libpcre3', 
            'libpcre3-dev']
    update_cache: yes
  tags: 
    - install

- name: Add group nginx
  ansible.builtin.group:
    name: nginx
    state: present
  tags: 
    - install

- name: Add user nginx
  ansible.builtin.user:
    name: nginx
    group: nginx
    state: present
    shell: /usr/sbin/nologin
    create_home: false
  tags: 
    - install

- name: Setup nginx folders
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: nginx
    group: nginx
  loop:
    - "{{ nginx_build_dir }}"
    - "{{ nginx_conf_dir }}"
    - "{{ nginx_upstream_dir }}"
    - "{{ nginx_upstream_dir }}/http"
    - "{{ nginx_upstream_dir }}/stream"
    - "{{ nginx_var_dir }}"
    - "{{ nginx_var_dir }}/cache"
    - "{{ nginx_var_dir }}/tmpcache"
    - "{{ nginx_log_dir}}"
    - "{{ nginx_http_log_dir }}"
    - "{{ nginx_stream_log_dir }}"
  tags: 
    - install

- name: Download nginx tar ball
  ansible.builtin.get_url:
    url: http://nginx.org/download/nginx-{{nginx_version}}.tar.gz
    dest: "{{nginx_build_dir}}/nginx-{{nginx_version}}.tar.gz"
  tags: 
    - install
    - upgrade

- name: Unarchive nginx tar ball
  ansible.builtin.unarchive:
    src: "{{nginx_build_dir}}/nginx-{{nginx_version}}.tar.gz"
    dest: "{{nginx_build_dir}}/"
    remote_src: yes
    extra_opts: "--strip-components=1"
  tags: 
    - install
    - upgrade

- name: Git clone nginx VTS module for monitoring
  ansible.builtin.git:
    repo: 'git://github.com/vozlt/nginx-module-vts.git'
    dest: "{{nginx_build_dir}}/nginx-module-vts/"
    clone: yes

- name: Configuring NGINX source with custom modules
  ansible.builtin.command:
    cmd: >-
      ./configure \
      --user={{ nginx_user }}
      --group={{ nginx_group }}
      --sbin-path={{ nginx_bin_path }} \
      --conf-path={{ nginx_conf_dir }}/nginx.conf \
      {{ nginx_custom_modules }}
  args:
    chdir: "{{ nginx_build_dir }}"
  register: nginx_configure
  tags: 
    - install
    - upgrade

- name: Compile NGINX
  become: yes
  ansible.builtin.shell: make -j32 && make install
  args:
    chdir: "{{ nginx_build_dir }}"
  when: nginx_configure is changed
  notify:
  - restart nginx
  tags: 
    - install
    - upgrade

- name: Copy Nginx config files
  become: yes
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: 0644
  loop:
    - { src: 'nginx.conf.j2', dest: '{{ nginx_conf_dir }}/nginx.conf' }
    - { src: 'proxy.conf.j2', dest: '{{ nginx_conf_dir }}/proxy.conf' }
    - { src: 'default.conf.j2', dest: '{{ nginx_upstream_dir }}/default.conf' }
    - { src: 'nginx_status.conf.j2', dest: '{{ nginx_upstream_dir }}/nginx_status.conf' }
  tags: 
    - install
    - configure

- name: Setup logrotate for nginx
  become: yes
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - { src: 'logrotate_nginx.j2', dest: '/etc/logrotate.d/nginx' }   
  tags: 
    - install
    - configure

- name: Copy systemd file
  ansible.builtin.template:
    src: nginx.service.j2
    dest: /etc/systemd/system/nginx.service
  notify:
    - restart nginx
  tags: 
    - install

- name: Allow intra net access to nginx
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    source: 10.0.0.0/8
    destination_port: '80'
    jump: ACCEPT
  tags: 
    - install

- name: Save iptables rules to /etc/sysconfig/iptables
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/iptables
    insertafter: '^# END SA MANAGED BLOCK '
    line: '-A INPUT -s 10.0.0.0/8 -p tcp -m tcp --dport 80 -j ACCEPT'

- name: Allow intra net access to nginx
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    source: 10.0.0.0/8
    destination_port: '8080'
    jump: ACCEPT
  tags: 
    - install

- name: Save iptables rules to /etc/sysconfig/iptables
  ansible.builtin.lineinfile:
    path: /etc/sysconfig/iptables
    insertafter: '^# END SA MANAGED BLOCK '
    line: '-A INPUT -s 10.0.0.0/8 -p tcp -m tcp --dport 8080 -j ACCEPT'
  tags: 
    - install

# - name: Clean setup folder
#   ansible.builtin.file:
#     path: "{{ nginx_build_dir }}"
#     state: absent
#   tags: 
#     - install
